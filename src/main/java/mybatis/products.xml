<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 이 파일의 이름은 SQL 매퍼 입니다. 실행할 sql만 모아놓은 파일입니다.
        1) dml insert, update, delete, select와 동일한 태그에 작성하기
        2) dao 메소드에서 지정했던 메소드의 인자, 리턴타입 정하기.
             주의 : 자바 객체의 변수(속성)명과 파라미터 기호 #{} 이름을 동일하게 합니다.
                   파라미터가 Map일 때에는 key 이름과 파라미터 이름 동일하게 합니다.
                   기본 형식, String은 변수 선언 키워드와 동일하게 합니다. -->        
  <mapper namespace="tblproducts">
  <!-- 리턴타입이 List 일때에는 제너릭타입만 설정하면 됩니다. -->
  	 <select id="selAll" resultType="ProductDto">
        SELECT * FROM TBL_PRODUCT
     </select>
     <select id="selCtg" parameterType="String" resultType="ProductDto" >
        SELECT * FROM TBL_PRODUCT WHERE CATEGORY = #{category,jdbcType=VARCHAR}
     </select>
     <select id="selPname" resultType="ProductDto">
        SELECT * FROM TBL_PRODUCT WHERE PNAME LIKE '%'||#{pname}||'%'
     </select>
     <!-- insert, update, delete는 리턴타입 지정안합니다.(그래도 값은 리턴해 줍니다.) -->
     <select id="selPcdPnm" resultType="java.util.Map">
           SELECT PCODE,PRICE FROM TBL_PRODUCT
     </select>
     <insert id="ins" parameterType="ProductDto">
        INSERT INTO TBL_PRODUCT
           VALUES(#{category},#{pcode},#{pname},#{price})
     </insert>
     <delete id="del" parameterType="int">
        DELETE FROM TBL_PRODUCT
           WHERE PCODE = #{pcode}
     </delete>
  </mapper>